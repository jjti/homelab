# todo: follow this: https://discourse.pi-hole.net/t/pi-hole-high-availability-with-kubernetes/67505/4
# 1170
---
apiVersion: v1
kind: Service
metadata:
  name: pihole
  labels:
    app: pihole
  annotations:
    # https://metallb.universe.tf/usage/#ip-address-sharing
    metallb.universe.tf/allow-shared-ip: pihole-dns
spec:
  type: LoadBalancer
  # loadBalancerIP: "192.168.0.128"
  ports:
  - port: 53
    targetPort: 53
    name: dns-tcp
    protocol: TCP
  - port: 80
    targetPort: 80
    name: web
    protocol: TCP
  selector:
    app: pihole
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-udp
  labels:
    app: pihole
  annotations:
    metallb.universe.tf/allow-shared-ip: pihole-dns
spec:
  type: LoadBalancer
  # loadBalancerIP: "192.168.0.128"
  ports:
  - port: 53
    targetPort: 53
    name: dns-udp
    protocol: UDP
  selector:
    app: pihole
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pihole
spec:
  selector:
    matchLabels:
      app: pihole # has to match .spec.template.metadata.labels
  serviceName: "pihole"
  replicas: 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: pihole # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: pihole
        image: "pihole/pihole:latest"
        ports:
        - port: 53
          containerPort: 53
          name: dns-tcp
          protocol: TCP
        - port: 53
          containerPort: 53
          name: dns-udp
          protocol: UDP
        - port: 80
          containerPort: 80
          name: web
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: dns-tcp
        volumeMounts:
        - name: config
          mountPath: /etc/pihole
        # - name: config2
        #   mountPath: /etc/dnsmasq.d
        env:
        - name: TZ
          value: "America/New_York"
        - name: WEBPASSWORD
          value: "${pihole_password}"
  volumeClaimTemplates:
  - metadata:
      name: config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "pihole"
      resources:
        requests:
          storage: 1Mi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: "/admin/"
            backend:
              service:
                name: pihole
                port:
                  name: web
